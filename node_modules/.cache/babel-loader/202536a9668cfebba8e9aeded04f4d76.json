{"ast":null,"code":"var _jsxFileName = \"/Users/xinyuexiang/Desktop/ElectionsApp/src/components/votepart/votepart.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport $ from \"jquery\";\nlet time;\n\nclass VotePart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.startReading();\n    };\n\n    this.startReading = async () => {\n      let index = 0;\n      await setTimeout(() => {\n        time = setInterval(async () => {\n          if (index < this.state.length) {\n            await $(`.${this.state.currParaArray[index]}`).css(\"color\", \"#e9ecef\");\n            index += 1;\n          } else {\n            await this.setState({\n              readDone: true\n            });\n            clearInterval(time);\n          }\n        }, 300);\n      }, 1000);\n    };\n\n    this.checkAnswer = async e => {\n      await this.setState({\n        youtAnswer: e.target.value\n      });\n\n      if (this.state.youtAnswer === this.state.answers[0]) {\n        this.setState({\n          answerred: true,\n          score: this.state.score + 1\n        });\n      } else {\n        this.setState({\n          answerred: true\n        });\n      }\n    };\n\n    this.changeQuestion = async () => {\n      await this.setState({\n        currentParaNum: this.state.currentParaNum + 1,\n        currPara: this.state.paragraphs[this.state.currentParaNum],\n        readDone: false,\n        answerred: false\n      });\n      this.startReading();\n    };\n\n    this.state = {\n      level: 1,\n      score: 0,\n      currentParaNum: 0,\n      maxNumOfCan: 4,\n      currPara: \"It is the current position A\",\n      currParaArray: [],\n      length: 0,\n      readDone: false,\n      answerred: false,\n      paragraphs: [\"Position A\", \"Position B\", \"Position C\", \"Position D\"],\n      questions: [\"Who you wanna vote?\"],\n      choices: [[\"AAA\", \"BBB\", \"CCC\", \"DDD\"]],\n      answers: [\"AAA\"],\n      youtAnswer: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.readDone ? this.state.answerred ? this.state.currentParaNum < this.state.maxNumOfCan ? React.createElement(\"button\", {\n      onClick: this.changeQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Next VOTE \") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"You have finish all the VOTE!\"), React.createElement(Link, {\n      to: \"/user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Go Back Home\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.questions[0]), this.state.choices[0].map(choice => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      value: choice,\n      defaultChecked: false,\n      onClick: this.checkAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), choice))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.currParaArray ? React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        paddingLeft: 30,\n        fontSize: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.currParaArray.map(word => React.createElement(\"div\", {\n      className: word,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"\\xA0\", word))) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"wait for a sec ...\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), \"The process: \", this.state.currentParaNum + 1, \" / \", this.state.maxNumOfCan + 1);\n  }\n\n}\n\nexport default VotePart;","map":{"version":3,"sources":["/Users/xinyuexiang/Desktop/ElectionsApp/src/components/votepart/votepart.jsx"],"names":["React","Component","Link","$","time","VotePart","constructor","props","componentDidMount","startReading","index","setTimeout","setInterval","state","length","currParaArray","css","setState","readDone","clearInterval","checkAnswer","e","youtAnswer","target","value","answers","answerred","score","changeQuestion","currentParaNum","currPara","paragraphs","level","maxNumOfCan","questions","choices","render","map","choice","paddingLeft","fontSize","word"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport $ from \"jquery\";\nlet time;\n\nclass VotePart extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            level: 1,\n            score: 0,\n            currentParaNum: 0,\n            maxNumOfCan: 4,\n            currPara: \"It is the current position A\",\n            currParaArray: [],\n            length: 0,\n            readDone: false,\n            answerred: false,\n            paragraphs: [\n                \"Position A\",\n                \"Position B\",\n                \"Position C\",\n                \"Position D\",\n            ],\n            questions: [\"Who you wanna vote?\"],\n            choices: [[\"AAA\", \"BBB\", \"CCC\", \"DDD\"]],\n            answers: [\"AAA\"],\n            youtAnswer: null\n        };\n\n    };\n\n    componentDidMount = async() => {\n        this.startReading()\n    }\n\n    startReading = async() => {\n        let index = 0;\n        await setTimeout(() => {\n            time = setInterval( async() => {\n                if (index < this.state.length) {\n                    await $(`.${this.state.currParaArray[index]}`).css(\"color\", \"#e9ecef\");\n                    index += 1\n                } else {\n                    await this.setState({ readDone: true})\n                    clearInterval(time);\n                }\n            }, 300);\n        }, 1000)\n    };\n\n    checkAnswer = async(e) => {\n        await this.setState({ youtAnswer: e.target.value})\n        if (this.state.youtAnswer === this.state.answers[0]) {\n            this.setState({\n                answerred: true,\n                score: this.state.score + 1\n            })\n        } else {\n            this.setState({ answerred: true})\n        }\n    }\n\n    changeQuestion = async () => {\n        await this.setState({\n            currentParaNum: this.state.currentParaNum + 1,\n            currPara: this.state.paragraphs[this.state.currentParaNum],\n            readDone: false,\n            answerred: false\n        });\n        this.startReading();\n    }\n\n    render(){\n        return(\n            <div>\n                {this.state.readDone\n                ?\n                    this.state.answerred\n                    ?\n                        this.state.currentParaNum < this.state.maxNumOfCan\n                        ?\n                        <button onClick={this.changeQuestion}>Next VOTE </button>\n                        :\n                        <div>\n                            <h2>You have finish all the VOTE!</h2>\n                            <Link to=\"/user\">Go Back Home</Link>\n                        </div>\n                    :\n                    <div>\n                        {/* TODO : update the database and use <h3>{this.state.questions[this.state.currentParaNum]}</h3> */}\n                        <h3>{this.state.questions[0]}</h3>\n                        {/* TODO : update the database and use this.state.choices[this.state.currentParaNum].map(choice => ( */}\n                        {this.state.choices[0].map(choice => (\n                            <div>\n                                <input type=\"radio\" value={choice} defaultChecked={false} onClick={this.checkAnswer} />\n                                {choice}\n                            </div>\n\n                        ))}\n                    </div>\n                :\n                <div>\n                    {this.state.currParaArray\n                    ?\n                        <div className=\"row\" style={{paddingLeft:30, fontSize: 20}}>\n                        {this.state.currParaArray.map( word => (\n                            <div className={word}>&nbsp;{word}</div>\n                        ))}\n                        </div>\n                    :\n                        <p>wait for a sec ...</p>\n                    }\n                </div>\n                }\n                <br/>The process: {this.state.currentParaNum + 1} / {this.state.maxNumOfCan + 1}\n            </div>\n        )\n    }\n}\n\nexport default VotePart;\n"]},"metadata":{},"sourceType":"module"}