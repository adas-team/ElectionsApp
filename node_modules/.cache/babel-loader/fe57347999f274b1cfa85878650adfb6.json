{"ast":null,"code":"var _jsxFileName = \"/Users/xinyuexiang/Desktop/Reading-Research/src/component/train/TrainingBlock.js\";\nimport React, { Component } from \"react\";\nimport QuestionBlock from \"./QuestionBlock\";\n\nclass TrainingBlock extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.disappearHelper(0);\n    };\n\n    this.changeQuestion = async () => {\n      await this.setState({\n        paraNum: this.state.paraNum + 1,\n        currPara: this.state.paragraphs[this.state.paraNum],\n        fadeout: true,\n        readDone: false,\n        answerred: false\n      });\n      this.disappearHelper(0);\n    };\n\n    this.disappearHelper = i => {\n      const length = this.state.currPara.length;\n      setTimeout(() => {\n        let currPara = this.state.currPara;\n        currPara = this.setCharAt(currPara, i, '-');\n        this.setState({\n          currPara: currPara\n        });\n        i += 1;\n\n        if (i < length) {\n          this.disappearHelper(i, length);\n        } else {\n          this.setState({\n            readDone: true\n          });\n        }\n      }, this.props.disTime * 30);\n    };\n\n    this.setCharAt = (str, index, chr) => {\n      if (index > str.length - 1) return str;\n      return str.substr(0, index) + chr + str.substr(index + 1);\n    };\n\n    this.wrongAnswer = () => {\n      this.setState({\n        answerred: true\n      });\n    };\n\n    this.rightAnswer = () => {\n      this.setState({\n        answerred: true,\n        score: this.state.score + 1\n      });\n    };\n\n    this.state = {\n      score: 0,\n      paraNum: 0,\n      maxNumOfQues: 6,\n      currPara: \"Once, a man and his son were going to the market with their donkey.\",\n      fadeout: true,\n      readDone: false,\n      answerred: false,\n      paragraphs: [\"The man put the boy on the donkey.\", \"An Eagle swooped down upon a Serpent and seized it in his talons with the intention of carrying it and devouring it.\", \"A countryman, who was a witness of the encounter, came to the assistance of the eagle, and succeeded in freeing him from the Serpent and enabling him to escape.\", \"Jim and Jeny went to the orchard to pick apples.\", \"Jim saw a red bug with black dots and six legs, its called a ladybug.\", \"Jenny got home but couldn’t find her keys, now she cant get into her house.\"]\n    };\n  }\n\n  // TODO: connect to the database and extract the user's reading speed\n  // according to the speed to determine how much time should the words disappeare.\n  // TODO: connect to the database and extract the latest paragraphs to train.\n  render() {\n    const currLength = this.state.currPara.length;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.readDone ? this.state.answerred ? this.state.paraNum < this.state.maxNumOfQues ? React.createElement(\"button\", {\n      onClick: this.changeQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Next Question \") : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"You have finish all the training questions!\") : React.createElement(QuestionBlock, {\n      wrongAnswer: this.wrongAnswer,\n      rightAnswer: this.rightAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }) : this.state.currPara, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), \"Para length: \", currLength, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), \"Your score is: \", this.state.score, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), \"The process: \", this.state.paraNum + 1, \" / \", this.state.maxNumOfQues + 1);\n  }\n\n}\n\nexport default TrainingBlock;","map":{"version":3,"sources":["/Users/xinyuexiang/Desktop/Reading-Research/src/component/train/TrainingBlock.js"],"names":["React","Component","QuestionBlock","TrainingBlock","constructor","props","componentDidMount","disappearHelper","changeQuestion","setState","paraNum","state","currPara","paragraphs","fadeout","readDone","answerred","i","length","setTimeout","setCharAt","disTime","str","index","chr","substr","wrongAnswer","rightAnswer","score","maxNumOfQues","render","currLength"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport QuestionBlock from \"./QuestionBlock\";\n\nclass TrainingBlock extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            score: 0,\n            paraNum: 0,\n            maxNumOfQues: 6,\n            currPara: \"Once, a man and his son were going to the market with their donkey.\",\n            fadeout: true,\n            readDone: false,\n            answerred: false,\n            paragraphs: [\n                \"The man put the boy on the donkey.\",\n                \"An Eagle swooped down upon a Serpent and seized it in his talons with the intention of carrying it and devouring it.\",\n                \"A countryman, who was a witness of the encounter, came to the assistance of the eagle, and succeeded in freeing him from the Serpent and enabling him to escape.\",\n                \"Jim and Jeny went to the orchard to pick apples.\",\n                \"Jim saw a red bug with black dots and six legs, its called a ladybug.\",\n                \"Jenny got home but couldn’t find her keys, now she cant get into her house.\"\n            ]\n        };\n        \n    };\n\n    componentDidMount = () => {\n        this.disappearHelper(0)\n    }\n\n    changeQuestion = async () => {\n        await this.setState({ \n            paraNum: this.state.paraNum + 1,\n            currPara: this.state.paragraphs[this.state.paraNum],\n            fadeout: true,\n            readDone: false,\n            answerred: false\n        });\n        this.disappearHelper(0);\n    }\n\n    disappearHelper = (i) => {\n        const length = this.state.currPara.length\n        setTimeout(() => {\n            let currPara = this.state.currPara;\n            currPara = this.setCharAt(currPara, i, '-');\n            this.setState({\n                currPara: currPara\n            });\n            i += 1;\n            if (i < length) {\n                this.disappearHelper(i, length)\n            } else {\n                this.setState({ readDone: true})\n            }\n        }, this.props.disTime * 30 )\n    }\n\n    setCharAt = (str,index,chr) => {\n        if(index > str.length-1) return str;\n        return str.substr(0,index) + chr + str.substr(index+1);\n    }\n\n    wrongAnswer = () => {\n        this.setState({ answerred: true})\n    }\n\n    rightAnswer = () => {\n        this.setState({ \n            answerred: true,\n            score: this.state.score + 1\n        })\n    }\n\n    // TODO: connect to the database and extract the user's reading speed\n    // according to the speed to determine how much time should the words disappeare.\n\n    // TODO: connect to the database and extract the latest paragraphs to train.\n\n    render(){\n\n        const currLength = this.state.currPara.length\n        \n        return(\n            <div>\n                { this.state.readDone\n                ?\n                    this.state.answerred\n                    ?\n                        this.state.paraNum < this.state.maxNumOfQues\n                        ?\n                        <button onClick={this.changeQuestion}>Next Question </button>\n                        :\n                        <h2>You have finish all the training questions!</h2>\n                    :\n                    <QuestionBlock wrongAnswer={this.wrongAnswer} rightAnswer={this.rightAnswer}/>\n                :\n                this.state.currPara\n                }\n                <br />\n                Para length: {currLength}\n                <br />\n                Your score is: {this.state.score}\n                <br />\n                The process: {this.state.paraNum + 1} / {this.state.maxNumOfQues + 1}\n\n            </div>\n        )\n    }\n}\n\nexport default TrainingBlock;"]},"metadata":{},"sourceType":"module"}